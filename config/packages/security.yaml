security:
  encoders:
    App\Entity\User:
      algorithm: auto

  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false


    admin:
      pattern:  ^/administration
      anonymous: ~
      context: primary_auth
      provider: app_user_provider
      form_login:
        check_path: login_check
        login_path: login
        default_target_path: easyadmin
        success_handler: auth_handler
        failure_handler: auth_handler
      logout:
        path: logout
        target: login
        success_handler: auth_handler
      guard:
        authenticators:
          - App\Security\Authenticator

    doc:
      pattern:  ^/api/doc
      security: false

    login:
      pattern:  ^/api/login_check
      stateless: true
      anonymous: true
      json_login:
        check_path:               /api/login_check
        success_handler:          lexik_jwt_authentication.handler.authentication_success
        failure_handler:          lexik_jwt_authentication.handler.authentication_failure

    reflesh:
      pattern: ^/api/refresh_token
      stateless: true
      anonymous: true


    api:
      pattern:   ^/api
      stateless: true
      guard:
        authenticators:
          - lexik_jwt_authentication.jwt_token_authenticator

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/doc, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api,       roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/administration, roles: ROLE_ADMIN }

  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      id: app.user_provider
    # - { path: ^/api/profile, roles: ROLE_USER }
